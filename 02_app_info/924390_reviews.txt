{"success":1,"query_summary":{"num_reviews":1,"review_score":0,"review_score_desc":"2 user reviews","total_positive":0,"total_negative":2,"total_reviews":2},"reviews":[{"recommendationid":"69737981","author":{"steamid":"76561198025309409","num_games_owned":12747,"num_reviews":82,"playtime_forever":291,"playtime_last_two_weeks":0,"playtime_at_review":272,"last_played":1590342532},"language":"english","review":"Ozapell Mystery Text Adventure (OMTA) is a text adventure with an interesting concept that gets horribly mutilated by a crude presentation, a primitive parser, and bland writing. It was also coded in a clunky programming language that apparently made it hard to include even the most basic usability features.\n\nI've been in love with text adventures ever since the first Zork found its way to my C64, and whenever I see one on Steam, I really want to like it - but in this case, I just can't. This is not a retro game, it's a considerably-worse-than-retro-ever-was game. After the 20-30 minutes that I needed for my first playthrough, it unfortunately became obvious how lackluster it was in practically every single aspect.\n\nWhere to begin? Let's have a word about presentation first, and then I'll go through the main components of a text adventure - puzzles, writing, and parser. Fair warning: One of my usual walls of text is following, for those who are interested in a detailed analysis. :)\n\n[b][u]1. Presentation[/u][/b]\nThis isn't the most important aspect of a text-based game, nor is it terribly difficult to get right, but OMTA manages to botch it up. The text is in all-caps in a crude fixed-width font, and limited to 40 characters per line, which looks ridiculous on a large monitor. While excessive use of caps _did_ occur in many adventure games of the 80s (especially those of poorer quality), it's worth noting that even the venerable Zork had lowercase letters, and almost all of them used a more readable font. Simply using the operating system's display functions, or one of the popular text adventure interpreters like Frotz or Lectrote, would have provided a much better display. The problem here seems to be that OMTA was written in a crude and clunky programming language called \"Ozapell Basic\", which is stuck with a 40-character line length and that terrible font.\n\n[b][u]2. Puzzles[/u][/b]\nIn theory, the idea of a murder mystery with randomized culprits and clues is intriguing. In practice, it requires a lot of work to get right. Sadly, OMTA is very far from turning this interesting concept into an engaging experience. Its structure is very simple: The same seven clue items are randomly distributed among in-game furniture objects, with no discernible reason as to why you would find them at that location. Each clue item always provides the same information, but includes the names of different suspects each game. So while you technically have a \"new\" case each time you start the game, in practice you're just doing the exact same things with the exact same objects, you just arrive at a different name at the end. The game's replayability value is therefore low, other games use smarter and more intricate methods of randomization.\n\n[b][u]3. Writing[/u][/b]\nThe game's writing is incredibly dry, matter-of-factly, and on-the-nose. The style is approximate to the level of a 10-year-old who has learned to convey information, but has not yet understood how to create an experience for the reader. Aesthetically, the game's terse one-liners are as bare as texts in an instruction manual or dictionary.\n\nI really don't like to dish out such hard criticism about a game whose genre I like, but what else can you say when the entire description of the bedroom is \"A room for sleeping\", the entire description of the kitchen is \"The kitchen is where food is prepared and cooked\" (oh really?), and so on? Compared to the literary quality of actual 80s adventures from Infocom or Magnetic Scrolls, or hundreds of excellent free games that the IF community has written, this is just painful.\n\n[b][u]4. Parser[/u][/b]\nOMTA's parser understands two-object commands like \"give (object) to (person)\", as well as phrasal verbs, and in that way it's actually more sophisticated than the more primitive 80s adventures like, say, Alligata's \"Aztec Tomb\". That said, the parsers of other 80s adventures like Melbourne House's \"The Hobbit\" or literally every Infocom game ever released were much more powerful.\n\nWhat kills the parser of OMTA, is its failure to provide even the most basic quality-of-life features that were already present in _good_ 80s adventures, and have become standard since then:\n[list]\n[*]No cursor movement in the input line, all you can do is type a new character or delete the previous one\n[*]Using \"cursor up\" to scroll through past inputs in order to select one and edit it is not possible\n[*]No use of pronouns, e.g. after entering \"look under bookshelf\" you can't just type \"look behind it\", you need to type \"bookshelf\" again.\n[*]Similarly, \"Ask Cynthia about herself\" does not work, you have to resort to crude constructions like \"Ask Cynthia about Cynthia\".\n[*]Issuing multiple commands in a single line (e.g. \"take coin and newspaper, then go north\" is not possible.\n[*]When you mistyped something, e.g. \"Ask Cynthia about lettr\", and the game replies with \"Ask about what?\", you cannot just type \"letter\" or use the Infocom standard of \"oops letter\", you have to retype the entire sentence.\n[*]No \"Examine\" command. Instead, the game wants you to look in, look under, and look behind things. Since you usually have to do all three to find all the clue items, and the items are just placed randomly with no regard for thematic fit, this adds nothing to the game except tedium and repetition.\n[*]Extremely small vocabulary\n[/list]\n\nFrom the game's description and its title screen, I got the impression that it was supposed to show off what can be done with Ozapell Basic. The logical conclusion is that Ozapell Basic is a much poorer programming language than those that have been used to create text adventures in the 80s. And believe me, many of those languages were absolutely terrible. If Ozapell cannot improve over something as unanimously loathed as C64 Basic, then I really have to wonder why it even exists.\n\n[b][u]5. Conclusion[/u][/b]\nI'm sorry, I really cannot recommend OMTA to anyone. I do not see an audience for it at all.\n\nAs a nostalgia game, it fails because it has none of the aspects that made the old games good.\n\nAs a text adventure, it fails because its writing, design, and parser are so much worse than literally hundreds of freely available games that it's hard to find words for it.\n\nAs a replayable randomized puzzle game, it fails because its structure is so simplistic and repetitive that the second playthrough becomes boring already.\n\nAs a showcase for Ozapell Basic, it fails because it's so much worse than other text adventure games that it damages that product instead of helping it. Had this game been written in one of the existing text adventure design languages like Inform, TADS, Hugo, or others, than at least its parser and presentation would have been much better, and the randomization would probably have been easier to implement and improve upon.\n\nIf you are looking for games that actually evoke the spirit of _good_ old text adventures (and often even improve on those), have a look at hundreds of excellent free games in [url=https://www.ifarchive.org/index.html]The Interactive Fiction Archive[/url]. Or, if you want something that's ready-to-use and already on Steam, check out Thaumistry, or Anchorhead, or classics like Eric the Unready, the Spellcasting 101 series, and the Zork Anthology. But not OMTA, it's unfortunately not even worth its low price.","timestamp_created":1590342497,"timestamp_updated":1591402937,"voted_up":false,"votes_up":7,"votes_funny":0,"weighted_vote_score":"0.615738987922668457","comment_count":0,"steam_purchase":true,"received_for_free":false,"written_during_early_access":false}],"cursor":"AoJ4qrfAw/ICfd+DigI="}